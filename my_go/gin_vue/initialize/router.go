package initialize

import (
	"gin_vue/global"
	"gin_vue/middleware"
	"gin_vue/router"
	"net/http"

	"github.com/gin-gonic/gin"
)

// 初始化总路由

func Routers() *gin.Engine {
	var Router = gin.Default()
	Router.StaticFS(global.GVA_CONFIG.Local.Path, http.Dir(global.GVA_CONFIG.Local.Path)) // 为用户头像和文件提供静态地址
	// Router.Use(middleware.LoadTls())  // 打开就能玩https了
	global.GVA_LOG.Info("use middleware logger")
	// 跨域
	Router.Use(middleware.Cors()) // 如需跨域可以打开
	global.GVA_LOG.Info("use middleware cors")
	/* TODO: 待删除，更换文档依赖库
	文本输出
	// Router.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))
	// global.GVA_LOG.Info("register swagger handler")
	*/
	// 方便统一添加路由组前缀 多服务器上线使用
	PublicGroup := Router.Group("/v1")
	{
		router.InitBaseRouter(PublicGroup) // 注册基础功能路由 不做鉴权
	}
	// 需要登陆鉴权的接口
	PrivateGroup := Router.Group("/v1")
	PrivateGroup.Use(middleware.JWTAuth())
	{
		// router.InitEmailRouter(PrivateGroup)                 // 邮件相关路由
		// router.InitSystemRouter(PrivateGroup)                // system相关路由

		// Code generated by gin_vue Begin; DO NOT EDIT.
		// Code generated by gin_vue End; DO NOT EDIT.
	}
	global.GVA_LOG.Info("router register success")
	return Router
}
